const fs = require('fs');
const ErrorHelper = require('../utils/error-helper');
const getRedisQueue = require('../services/redis-queue');
const appService = require('../services/application');
const logger = require('../../config/winston-config');

const APP_TYPE = {
  ANDROID: 'apk',
};

class AppController {
  static async submitApp(req, res) {
    try {
      if (!req.files || Object.keys(req.files).length === 0) {
        return res.status(400).send('No files were uploaded.');
      }
      const { file } = req.files;

      if (file.name.substr(file.name.length - 3) !== APP_TYPE.ANDROID) {
        return res.status(403).send('Upload apk only');
      }

      const filePath = `${__dirname}/temp/${file.name}`;

      file.mv(filePath, (err) => {
        if (err) {
          logger.error(err);
          return res.status(500).send(err);
        }
      });

      const appId = await appService.submitApp(APP_TYPE.ANDROID, filePath, file.name);
      logger.info(`appId ${appId}`);

      getRedisQueue().sendMessage(JSON.stringify({
        fileName: file.name,
        appId,
      }));

      fs.unlink(filePath, err => {
				if (err) {
					logger.error(`unable to remove file from the server ${err}`);
					return;
				}
				logger.info(`file removed successfully ${filePath}`);
			});
      return res.status(200).send('success');
    } catch (err) {
      logger.error(`error while submitting an app for scan ${err}`);
      const appError = ErrorHelper.error(err);
      return res.status(appError.status).send(appError);
    }
  }

  static async fetchAll(req, res) {
    const result = await appService.fetchAll();
    return res.status(200).send(result);
  }
}

module.exports = AppController;
