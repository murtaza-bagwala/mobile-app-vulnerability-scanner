const jwt = require('jsonwebtoken');
const AppError = require('../errors/app-error');
const HTTP_STATUS_CODES = require('../utils/status-code');
const ErrorHelper = require('../utils/error-helper');
const { STATUS_CODE, STATUS_MSG } = require('../utils/constant');

function authenticateAPI(req, res, next) {
  let ignoreExpiration = false;
  try {
    let token = req.headers['x-access-token'] || req.headers.authorization;
    if (!token) {
      const noTokenError = new AppError(STATUS_MSG.NO_TOKEN_PROVIDED,
        HTTP_STATUS_CODES.UNAUTHORIZED, STATUS_CODE.INVALID_TOKEN);
      res.status(noTokenError.status).send(noTokenError);
    }
    if (token.startsWith('Bearer ')) {
      token = token.slice(7, token.length);
    }

    ignoreExpiration = !!req.ignoreExpiration;

    jwt.verify(token, process.env.SECRET_KEY, { ignoreExpiration }, (err, decoded) => {
      if (err) {
        const invalidTokenError = new AppError(err.message,
          HTTP_STATUS_CODES.UNAUTHORIZED, STATUS_CODE.INVALID_TOKEN);
        res.status(invalidTokenError.status).send(invalidTokenError);
      }
      req.userId = decoded.sub;
      next();
    });
  } catch (exception) {
    const appError = ErrorHelper.error(exception);
    res.status(appError.status).send(appError);
  }
}

module.exports = authenticateAPI;
