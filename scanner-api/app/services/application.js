const logger = require('../../config/winston-config');
const azure = require('./azure/azure');
const Application = require('../models/application');
const commonMethods = require('../utils/common-methods');

exports.submitApp = async (type, filePath, fileName) => {
  let result = await Application.findOne({ path: fileName });
  if (!result) {
    logger.info('record already exists');
    result = await Application.create({
      path: fileName,
      description: '',
      approved: false,
      type,
    });
  }
  logger.info(`result ${result}`);
  await azure.uploadFileToContainer(filePath);
  return result.id;
};

exports.fetchAll = async () => {
	let result = await Application.find({}).sort({ createdAt: 1 });
  logger.info(`result ${result}`);
  const response = result.map((app) => {
    return {
      name: app.path,
      submittedOn: app.createdAt,
      status: app.approved
    }
  });
  return commonMethods.successResponse(200, "success", "success", response);
};
