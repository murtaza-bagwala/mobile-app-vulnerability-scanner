const bcrypt = require('bcrypt');
const crypto = require('crypto');
const { DIGEST, HASH_ALGORITHM } = require('../utils/constant');

class BcryptPasswordGenerator {
  static generatePassword(password) {
    const hashedPassword = BcryptPasswordGenerator.createHashWithSHA(password, DIGEST.HEX);
    const salt = bcrypt.genSaltSync(10); // Number of Rounds to default
    const bcryptedPassword = bcrypt.hashSync(hashedPassword, salt); // encypt with bcrypt
    return bcryptedPassword;
  }

  static createHashWithSHA(password, digestName) {
    return crypto.createHash(HASH_ALGORITHM.SHA256).update(password)
      .digest(digestName); // apply sha256
  }

  static hashStampedToken(token) {
    const hashStampedToken = {
      when: new Date(),
      hashedToken: token,
    };
    return hashStampedToken;
  }
}


module.exports = BcryptPasswordGenerator;
