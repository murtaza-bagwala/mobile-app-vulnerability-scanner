const chai = require('chai');
const chaiHttp = require('chai-http');

const should = chai.should();

const faker = require('faker');
const app = require('../../app/server');

const mongoDB = require('../../app/services/mongodb-service');
const User = require('../factories/user-factory');

chai.use(chaiHttp);

describe('Unique contact numbers and emails test', () => {
  const firstUserEmail = faker.internet.email();
  const secondUserEmail = faker.internet.email();
  const thirdUserEmail = faker.internet.email();
  const fourthUserEmail = faker.internet.email();

  const firstUserPhone = '12075737634';
  const secondUserPhone = '768374634';
  const thirdUserPhone = '9103497634';
  const fourthUserPhone = '7384737634';

  const user1 = User.create(firstUserEmail, '', '', '', `12${firstUserPhone}`);
  const user2 = User.create(secondUserEmail, '', '', '', `3${secondUserPhone}`);
  const user3 = User.create(thirdUserEmail, '', '', '', thirdUserPhone);
  const user4 = User.create(fourthUserEmail, '', '', '', fourthUserPhone);
  const users = [user1, user2, user3, user4];

  before((done) => {
    mongoDB.connect().then(() => {
      mongoDB.dbInstance().dropDatabase(() => {
        mongoDB.dbInstance().collection('users').insertMany(users, () => {
          done();
        });
      });
    });
  });

  it('returns status as 400 if empty data is passed', (done) => {
    const obj = {};
    chai.request(app).post('/users/contact-exists').send(obj).end((err, result) => {
      result.should.have.status(400);
      result.body.should.have.status(400);
      result.body.code.should.equal('user.invalid.contacts_or_email');
      result.body.message.should.equal('Invalid phone numbers or email list.');
      done();
    });
  });

  it('returns status as 200 if contactList  data is passed', (done) => {
    const obj = {
      contactList: [
        {
          phoneNumber: firstUserPhone,
        },
        {
          phoneNumber: secondUserPhone,
        },
        {
          phoneNumber: thirdUserPhone,
        },
        {
          phoneNumber: fourthUserPhone,
        },
      ],

      emailList: [
        {
          email: firstUserEmail,
        },
        {
          email: secondUserEmail,
        },
        {
          email: thirdUserEmail,
        },
        {
          email: fourthUserEmail,
        },
      ],
    };
    chai.request(app).post('/users/contact-exists').send(obj).end((err, result) => {
      result.should.have.status(200);
      result.body.code.should.equal('success');
      should.exist(result.body.data);
      should.exist(result.body.data.contactList);
      result.body.data.emailList[0].exists.should.equal(true);
      result.body.data.contactList[0].exists.should.equal(true);
      done();
    });
  });
});
