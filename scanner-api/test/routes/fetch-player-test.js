const chai = require('chai');
const chaiHttp = require('chai-http');

// eslint-disable-next-line no-unused-vars
const should = chai.should();

const mongoose = require('mongoose');
const app = require('../../app/server');

const mongoDB = require('../../app/services/mongodb-service');
const Player = require('../factories/player');
const Team = require('../factories/team');

chai.use(chaiHttp);

describe('Create User Service Tests', () => {
  const players = [];
  const team = Team.create('Dragon Devils', 'nfl');

  before((done) => {
    mongoDB.connect().then(() => {
      mongoDB.dbInstance().dropDatabase(() => {
        mongoDB.dbInstance().collection('teams').insertOne(team, (error, teamResult) => {
          const teamId = mongoose.Types.ObjectId(teamResult.insertedId);
          for (let i = 0; i < 10; i += 1) {
            players.push(Player.create('Player', 'nfl', teamId));
          }
          mongoDB.dbInstance().collection('players').insertMany(players);
          done();
        });
      });
    });
  });

  it('returns status as 400 if query param is blank', (done) => {
    chai.request(app).get('/players').end((err, result) => {
      result.should.have.status(400);
      result.body.message.should.equal('Unable to find Players');
      result.body.code.should.equal('player.invalid.name');
      done();
    });
  });

  it('returns status as 404 if no record found', (done) => {
    chai.request(app).get('/players').query({ name: 'z' })
      .end((err, result) => {
        result.should.have.status(404);
        result.body.message.should.equal('Unable to find Players');
        result.body.code.should.equal('record.missing');
        done();
      });
  });

  it('returns status as 200 if any player is found and should return only 5 records', (done) => {
    chai.request(app).get('/players').query({ name: 'a', pageNo: 1, limit: 5 })
      .end((err, result) => {
        result.should.have.status(200);
        result.body.data.should.be.an('array');
        result.body.data.length.should.equal(5);
        result.body.data[0].name.should.equal('Player');
        result.body.data[0].teamInfo.fullName.should.equal('Dragon Devils');
        done();
      });
  });
});
