const chai = require('chai');
const chaiHttp = require('chai-http');

// eslint-disable-next-line no-unused-vars
const should = chai.should();

const app = require('../../app/server');

const mongoDB = require('../../app/services/mongodb-service');
const Sport = require('../factories/sport');
const Team = require('../factories/team');

chai.use(chaiHttp);

describe('Create User Service Tests', () => {
  const sports = [];
  const teams = [];

  sports.push(Sport.create('NFL Football', 'nfl'));
  sports.push(Sport.create('MLB Baseball', 'mlb'));
  sports.push(Sport.create('NBA Basketball', 'nba'));

  for (let i = 0; i < 10; i += 1) {
    teams.push(Team.create('Dragon Devils'));
  }

  before((done) => {
    mongoDB.connect().then(() => {
      mongoDB.dbInstance().dropDatabase(() => {
        mongoDB.dbInstance().collection('sports').insertMany(sports, () => {
          mongoDB.dbInstance().collection('teams').insertMany(teams);
          done();
        });
      });
    });
  });


  it('returns status as 400 if query param is blank', (done) => {
    chai.request(app).get('/teams').end((err, result) => {
      result.should.have.status(400);
      result.body.message.should.equal('Unable to find Teams');
      result.body.code.should.equal('team.invalid.name');
      done();
    });
  });

  it('returns status as 404 if no record found', (done) => {
    chai.request(app).get('/teams').query({ name: 'z' })
      .end((err, result) => {
        result.should.have.status(404);
        result.body.message.should.equal('Unable to find Teams');
        result.body.code.should.equal('record.missing');
        done();
      });
  });

  it('returns status as 200 if any team is found and should return only 10 records', (done) => {
    chai.request(app).get('/teams').query({ name: 'a', pageNo: 1, limit: 5 })
      .end((err, result) => {
        result.should.have.status(200);
        result.body.data.should.be.an('array');
        result.body.data.length.should.equal(5);
        result.body.data[0].fullName.should.equal('Dragon Devils');
        done();
      });
  });
});
