const chai = require('chai');
const chaiHttp = require('chai-http');

const should = chai.should();
const app = require('../../app/server');

chai.use(chaiHttp);

describe('OTP Verification Service Tests', () => {
  it('returns status as 400 if phone number does not exists', (done) => {
    const obj = {
      phoneNo: '',
    };

    chai.request(app).post('/users/otp').send(obj).end((err, result) => {
      if (err) done(err);
      result.should.have.status(400);
      should.exist(result.error);
      result.error.status.should.equal(400);
      result.body.message.should.equal('Invalid phone number');
      result.body.code.should.equal('user.invalid.phone_no');
      done();
    });
  });


  it('returns status as 400 if any of the required fields are missing', (done) => {
    const obj = { };
    chai.request(app).post('/users/otp').send(obj).end((err, result) => {
      if (err) done(err);
      result.should.have.status(400);
      should.exist(result.error);
      result.error.status.should.equal(400);
      result.body.message.should.equal('Invalid phone number');
      result.body.code.should.equal('user.invalid.phone_no');
      done();
    });
  });

  it('returns status as 400 if phone number and otp does not exists', (done) => {
    const obj = {
      phoneNo: '',
      otp: '',
    };

    chai.request(app).put('/users/verify-otp').send(obj).end((err, result) => {
      if (err) done(err);
      result.should.have.status(400);
      should.exist(result.error);
      result.error.status.should.equal(400);
      result.body.message.should.equal('Invalid phone number or OTP');
      result.body.code.should.equal('user.invalid.phone_number_or_otp');
      done();
    });
  });

  it('returns status as 400 if any of the required fields are missing', (done) => {
    const obj = { };
    chai.request(app).put('/users/verify-otp').send(obj).end((err, result) => {
      if (err) done(err);
      result.should.have.status(400);
      should.exist(result.error);
      result.error.status.should.equal(400);
      result.body.message.should.equal('Invalid phone number or OTP');
      result.body.code.should.equal('user.invalid.phone_number_or_otp');
      done();
    });
  });

  // TO DO:- WRITE TWILIO MOCK FOR OTP VERIFICATION SUCCESS SCENARIOS
});
