const chai = require('chai');
const chaiHttp = require('chai-http');
const faker = require('faker');
const app = require('../../app/server');

// eslint-disable-next-line no-unused-vars
const should = chai.should();

const mongoDB = require('../../app/services/mongodb-service');
const User = require('../factories/user-factory');

chai.use(chaiHttp);

describe('Unique phone number test', () => {
  const user = User.create('', '', '', '', '+12075737634');
  before((done) => {
    mongoDB.connect().then(() => {
      mongoDB.dbInstance().dropDatabase(() => {
        mongoDB.dbInstance().collection('users').insertOne(user, (err) => {
          if (err) done(err);
          done();
        });
      });
    });
  });

  it('returns status as 400 if phoneNo  is empty ', (done) => {
    const obj = {
      phoneNo: '',
    };
    chai.request(app).post('/users/phone-number/exists').send(obj)
      .end((err, result) => {
        if (err) done(err);
        result.should.have.status(400);
        result.body.code.should.equal('user.invalid.phone_no');
        result.body.message.should.equal('Invalid phone number');
        done();
      });
  });

  it('returns status as 400 if no data is passed ', (done) => {
    const obj = {};

    chai.request(app).post('/users/phone-number/exists').send(obj)
      .end((err, result) => {
        if (err) done(err);
        result.should.have.status(400);
        result.body.code.should.equal('user.invalid.phone_no');
        result.body.message.should.equal('Invalid phone number');
        done();
      });
  });

  it('returns status as 200 if phone number exists and is unique ', (done) => {
    const obj = {
      phoneNo: faker.phone.phoneNumber(),
    };
    chai.request(app).post('/users/phone-number/exists').send(obj)
      .end((err, result) => {
        if (err) done(err);
        result.should.have.status(200);
        result.body.code.should.equal('success');
        result.body.phoneNumberExists.should.equal(false);
        done();
      });
  });

  it('returns status as 409 if phone number exists and is not unique ', (done) => {
    const obj = {
      phoneNo: '+12075737634',
    };
    chai.request(app).post('/users/phone-number/exists').send(obj)
      .end((err, result) => {
        if (err) done(err);
        result.should.have.status(409);
        result.body.code.should.equal('user.exists.phone_number');
        result.body.phoneNumberExists.should.equal(true);
        done();
      });
  });
});
