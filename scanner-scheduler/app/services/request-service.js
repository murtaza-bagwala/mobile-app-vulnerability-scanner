const Request = require('request-promise');
const AppError = require('../errors/app-error');
const { HTTP_METHOD } = require('../../app/utils/constant');
const logger = require('../../config/winston-config.js');

function baseHttpMethod(httpMethodName, url, data, formData) {
  const options = {
    method: httpMethodName,
    url,
    json: true,
  };

  if (httpMethodName !== HTTP_METHOD.GET && !formData) {
    options.body = data;
  }

  if (formData) {
		options.formData = formData;
	}

  return new Promise((res, rej) => {
    Request(options)
      .then((response, err) => {
        if (err) {
          rej(new AppError(err.message));
        }
        //console.log(response)
        res(response);
      })
      .catch((err) => {
        logger.error(`error occurred ${err}`);
        res(null);
      });
  });
}
function post(url, data, formData) {
  return baseHttpMethod(HTTP_METHOD.POST, url, data, formData);
}
function patch(url, data) {
  return baseHttpMethod(HTTP_METHOD.PATCH, url, data);
}
async function get(url) {
  return baseHttpMethod(HTTP_METHOD.GET, url);
}

function destroy(url) {
  return baseHttpMethod(HTTP_METHOD.DELETE, url);
}

module.exports = {
  get,
  post,
  patch,
  destroy,
};
